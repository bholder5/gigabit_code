extern crate nalgebra as na;

pub type BMat = na::SMatrix<f64, 8, 4>;

pub fn init_bmat_pos() -> BMat {
    let b = BMat::from_row_slice(&[
        0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        -0.0010249447635347,0.0000412796258665,-0.0001156409521258,0.0000000000000000,
        -0.0000412796258665,0.0042278962727886,-0.0000014403612810,0.0000000000000000,
        0.0001156409521258,-0.0000014403612810,0.0082668321596602,0.0000000000000000,
        1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

        ]);
        
    return b
    }

pub fn init_bmat_neg() -> BMat {
    let b = BMat::from_row_slice(&[
        0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        -0.0010249447635347,0.0000412796258665,0.0001156409521258,0.0000000000000000,
        -0.0000412796258665,0.0042278962727886,0.0000014403612810,0.0000000000000000,
        -0.0001156409521258,0.0000014403612810,0.0082668321596602,0.0000000000000000,
        1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

        ]);
        
    return b
    }

    // let b = BMat::from_row_slice(&[
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
    //     -0.0010142361895760,0.0000305866012553,0.0000000000000000,0.0000000000000000,
    //     -0.0000305866012553,0.0042859010463872,0.0000000000000000,0.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0082627971241891,0.0000000000000000,
    //     1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000
    //     ]);
    // return b
    // }