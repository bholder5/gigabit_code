extern crate nalgebra as na;

pub type BMat = na::SMatrix<f64, 8, 4>;
pub type BMat2 = na::SMatrix<f64, 12, 4>;
pub type BMat3 = na::SMatrix<f64, 16, 4>;
pub type BMat4 = na::SMatrix<f64, 9, 4>;

pub fn init_bmat_pos() -> BMat {
    let b = BMat::from_row_slice(&[
        0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        -0.0010249447635347,0.0000412796258665,-0.0001156409521258,0.0000000000000000,
        -0.0000412796258665,0.0042278962727886,-0.0000014403612810,0.0000000000000000,
        0.0001156409521258,-0.0000014403612810,0.0082668321596602,0.0000000000000000,
        1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

        ]);
        
    return b
    }

pub fn init_bmat_neg() -> BMat {
    let b = BMat::from_row_slice(&[
        0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
        -0.0010249447635347,0.0000412796258665,0.0001156409521258,0.0000000000000000,
        -0.0000412796258665,0.0042278962727886,0.0000014403612810,0.0000000000000000,
        -0.0001156409521258,0.0000014403612810,0.0082668321596602,0.0000000000000000,
        1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

        ]);
        
    return b
    }

    pub fn init_bmat_pos1() -> BMat2 {
        let b = BMat2::from_row_slice(&[
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,-0.0014618173313063,0.0000000000000000,0.0000000000000000,
            -0.0000128870840972,-0.0000025941405397,-0.0007670006860875,0.0000000000000000,
            -0.0010249364408204,0.0000412813012098,-0.0001151456090879,0.0000000000000000,
            -0.0000412813012098,0.0041169591022175,-0.0000015400727011,0.0000000000000000,
            0.0001151456090879,-0.0000015400727011,0.0082373508241594,0.0000000000000000,
            1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

    
            ]);
            
        return b
        }
    
    pub fn init_bmat_neg1() -> BMat2 {
        let b = BMat2::from_row_slice(&[
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
            0.0000000000000000,-0.0014618173313063,0.0000000000000000,0.0000000000000000,
            0.0000128870840972,0.0000025941405397,-0.0007670006860875,0.0000000000000000,
            -0.0010249364408204,0.0000412813012098,0.0001151456090879,0.0000000000000000,
            -0.0000412813012098,0.0041169591022175,0.0000015400727011,0.0000000000000000,
            -0.0001151456090879,0.0000015400727011,0.0082373508241594,0.0000000000000000,
            1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

    
            ]);
            
        return b
        }


        pub fn init_bmat_pf() -> BMat3 {
            let b = BMat3::from_row_slice(&[
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,-0.0000001311854380,0.0000000000000000,0.0000000000000000,
                -0.0000000021966632,-0.0000000004421833,-0.0000001307388212,0.0000000000000000,
                0.0000000000000000,-0.0014618173313063,0.0000000000000000,0.0000000000000000,
                -0.0000128870840972,-0.0000025941405397,-0.0007670006860875,0.0000000000000000,
                -0.0010249364408204,0.0000412813012098,-0.0001151456090879,0.0000000000000000,
                -0.0000412813012098,0.0041169591022175,-0.0000015400727011,0.0000000000000000,
                0.0001151456090879,-0.0000015400727011,0.0082373508241594,0.0000000000000000,
                1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

                ]);
                
            return b
            }
        
        pub fn init_bmat_nf() -> BMat3 {
            let b = BMat3::from_row_slice(&[
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                0.0000000000000000,-0.0000001311854380,0.0000000000000000,0.0000000000000000,
                0.0000000021966632,0.0000000004421833,-0.0000001307388212,0.0000000000000000,
                0.0000000000000000,-0.0014618173313063,0.0000000000000000,0.0000000000000000,
                0.0000128870840972,0.0000025941405397,-0.0007670006860875,0.0000000000000000,
                -0.0010249364408204,0.0000412813012098,0.0001151456090879,0.0000000000000000,
                -0.0000412813012098,0.0041169591022175,0.0000015400727011,0.0000000000000000,
                -0.0001151456090879,0.0000015400727011,0.0082373508241594,0.0000000000000000,
                1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

    
        
                ]);
                
            return b
            }

            pub fn init_bmat_3() -> BMat4 {
                let b = BMat4::from_row_slice(&[
                    0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                    0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                    0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                    0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                    0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000001835535977,
                    -0.0010249447635346,0.0000412796258665,-0.0001156409521258,-1.0000000000000000,
                    -0.0000412796258665,0.0042278962727886,-0.0000014403612810,0.0000000000000000,
                    0.0001156409521258,-0.0000014403612810,0.0082668321596602,0.0000000000000000,
                    1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000

                    ]);
                    
                return b
                }
                pub fn init_bmat_3n() -> BMat4 {
                    let b = BMat4::from_row_slice(&[
                        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                        0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
                        0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000001835535977,
                        -0.0010249447635346,0.0000412796258665,0.0001156409521258,-1.0000000000000000,
                        -0.0000412796258665,0.0042278962727886,0.0000014403612810,0.0000000000000000,
                        -0.0001156409521258,0.0000014403612810,0.0082668321596602,0.0000000000000000,
                        1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000
                        
                        ]);
                        
                    return b
                    }
    // let b = BMat::from_row_slice(&[
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
    //     -0.0010142361895760,0.0000305866012553,0.0000000000000000,0.0000000000000000,
    //     -0.0000305866012553,0.0042859010463872,0.0000000000000000,0.0000000000000000,
    //     0.0000000000000000,0.0000000000000000,0.0082627971241891,0.0000000000000000,
    //     1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000
    //     ]);
    // return b
    // }