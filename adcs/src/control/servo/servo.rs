extern crate nalgebra as na;

pub type AMat1 = na::SMatrix<f64, 5, 5>;

pub fn init_AMat1_pos() -> AMat1 {
    let a = AMat1::from_row_slice(&[
0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
-0.0000000000000000,-0.0000000000000000,-0.0000000000000000,-0.0429919967711452,-0.0000000000000000,
    ]);
    return a;
}

pub type AMat2 = na::SMatrix<f64, 5, 2>;

pub fn init_AMat2_pos() -> AMat2 {
    let a = AMat2::from_row_slice(&[
0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,
1.0000000000000000,0.0000000000000000,
0.0000000000000000,1.0000000000000000,
1.0000000000000000,0.0000000000000000,
    ]);
    return a;
}

pub type AMat3 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat3_pos() -> AMat3 {
    let a = AMat3::from_row_slice(&[
25.2446822490807783,222.0341715928431086,0.0000191485421551,0.0022838632621678,0.0665681155502877,0.0183055101445204,1.4640721325641279,
    ]);
    return a;
}

pub type AMat4 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat4_pos() -> AMat4 {
    let a = AMat4::from_row_slice(&[
585.9380687933849003,771.4817379265423369,4.4721359550001853,67.7604011181773558,289.7353731831721575,672.3650028671231667,823.2344847802085042,
    ]);
    return a;
}

pub type AMat5 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat5_pos() -> AMat5 {
    let a = AMat5::from_row_slice(&[
240.1404849245832622,354.1906288197853883,7.0710678118656460,89.7720445567681793,216.3053774402211786,274.2672814677213182,189.5664949736902258,
    ]);
    return a;
}

