extern crate nalgebra as na;

pub type AMat1 = na::SMatrix<f64, 5, 5>;

pub fn init_AMat1_pos() -> AMat1 {
    let a = AMat1::from_row_slice(&[
0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
-0.0000000000000000,-0.0000000000000000,-0.0000000000000000,-0.0429919967711452,-0.0000000000000000,
    ]);
    return a;
}

pub type AMat2 = na::SMatrix<f64, 5, 2>;

pub fn init_AMat2_pos() -> AMat2 {
    let a = AMat2::from_row_slice(&[
0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,
1.0000000000000000,0.0000000000000000,
0.0000000000000000,1.0000000000000000,
1.0000000000000000,0.0000000000000000,
    ]);
    return a;
}

pub type AMat3 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat3_pos() -> AMat3 {
    let a = AMat3::from_row_slice(&[
67.2721517342709063,362.4570946476490576,0.0000365148371668,0.0108558589325672,0.2444167159104386,0.0500458964764817,6.2180268571446478,
    ]);
    return a;
}

pub type AMat4 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat4_pos() -> AMat4 {
    let a = AMat4::from_row_slice(&[
381.8040747695661707,569.4763419877093611,0.0141421356237075,44.7739754277999467,166.4838939296997466,303.8211530526452862,327.3310214945037160,
    ]);
    return a;
}

pub type AMat5 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat5_pos() -> AMat5 {
    let a = AMat5::from_row_slice(&[
100.8802778551395107,220.4735464452863027,0.5477225575052477,16.1860620330031608,56.5875946560445371,100.0392257494507362,110.4682617869622163,
    ]);
    return a;
}

