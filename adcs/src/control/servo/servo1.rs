extern crate nalgebra as na;

pub type AMat1 = na::SMatrix<f64, 5, 5>;

pub fn init_AMat1_pos() -> AMat1 {
    let a = AMat1::from_row_slice(&[
0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
-0.0000000000000000,-0.0000000000000000,-0.0000000000000000,-0.0429919967711452,-0.0000000000000000,
    ]);
    return a;
}

pub type AMat2 = na::SMatrix<f64, 5, 2>;

pub fn init_AMat2_pos() -> AMat2 {
    let a = AMat2::from_row_slice(&[
0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,
1.0000000000000000,0.0000000000000000,
0.0000000000000000,1.0000000000000000,
1.0000000000000000,0.0000000000000000,
    ]);
    return a;
}

pub type AMat3 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat3_pos() -> AMat3 {
    let a = AMat3::from_row_slice(&[
35.8481212341507955,264.5262077374437126,0.0000130384048104,0.0038398611700173,0.1052480669585265,0.0095834654670343,2.3845109616724818,
    ]);
    return a;
}

pub type AMat4 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat4_pos() -> AMat4 {
    let a = AMat4::from_row_slice(&[
320.7852534666941438,793.7672500222764711,0.0001500000000000,0.4968769067526535,31.2888682132755527,1011.2685553309482884,855.9612437268663143,
    ]);
    return a;
}

pub type AMat5 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat5_pos() -> AMat5 {
    let a = AMat5::from_row_slice(&[
117.5213704867199738,238.1474180359230957,0.6123724356957622,21.4825840873079557,70.6281129146549489,116.9019833695990371,119.5407035866514747,
    ]);
    return a;
}

