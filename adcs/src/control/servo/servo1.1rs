extern crate nalgebra as na;

pub type AMat1 = na::SMatrix<f64, 5, 5>;

pub fn init_AMat1_pos() -> AMat1 {
    let a = AMat1::from_row_slice(&[
0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,0.0000000000000000,0.0000000000000000,1.0000000000000000,
-0.0000000000000000,-0.0000000000000000,-0.0000000000000000,-0.0429919967711452,-0.0000000000000000,
    ]);
    return a;
}

pub type AMat2 = na::SMatrix<f64, 5, 2>;

pub fn init_AMat2_pos() -> AMat2 {
    let a = AMat2::from_row_slice(&[
0.0000000000000000,1.0000000000000000,
0.0000000000000000,0.0000000000000000,
0.0000000000000000,0.0000000000000000,
1.0000000000000000,0.0000000000000000,
0.0000000000000000,1.0000000000000000,
    ]);
    return a;
}

pub type AMat3 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat3_pos() -> AMat3 {
    let a = AMat3::from_row_slice(&[
706.5870679953324043,1230.7476238897659186,0.0866097569560161,2.0651070297647176,18.8469934515852344,69.6298183214981918,292.7931604880580494,
    ]);
    return a;
}

pub type AMat4 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat4_pos() -> AMat4 {
    let a = AMat4::from_row_slice(&[
321.5010257352626013,548.0278058446903060,4.4721359549963484,40.5660860647004569,150.4434740077365120,313.4463203796944413,452.0083958419589862,
    ]);
    return a;
}

pub type AMat5 = na::SMatrix<f64, 1, 7>;

pub fn init_AMat5_pos() -> AMat5 {
    let a = AMat5::from_row_slice(&[
115.1582822303954714,260.4282492125877866,3.1622776601691620,23.8211885170954716,81.8158741853339251,163.1151610625396415,222.7803798946692098,
    ]);
    return a;
}

